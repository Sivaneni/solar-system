name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
  MONGO_CLUSTER_URL: ${{vars.MONGO_CLUSTER_URL}}
  MONGO_DB_NAME: ${{vars.MONGO_DB_NAME}}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            os-env: [ubuntu-latest]
            versions: [18]
        runs-on: ${{matrix.os-env}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version ${{matrix.versions}}
          uses: actions/setup-node@v3
          with:
            node-version: ${{matrix.versions}}
        -  name: Node dependcies cache
           uses: actions/cache@v4
           with:
               path: node_modules
               key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
               restore-keys: |
                      ${{ runner.os }}-node-
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          continue-on-error: true
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
            overwrite: true
    
    coverage:
        name: code-voverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
        -  name: Node dependcies cache
           uses: actions/cache@v4
           with:
              path: node_modules
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-node-
        
        - name: Install Dependencies
          run: npm install
    
        - name: run coverage
          continue-on-error: true
          run: npm run coverage
          
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          if:   always()
          with:
            name: npm-coverage-reports
            path: coverage
            retention-days: 5
            overwrite: true
    docker:
      name: containerization
      runs-on: self-hosted
      needs: [coverage,unit-testing]
      steps:
        - name: checkout
          uses: actions/checkout@v4
        -  name: Login to Docker Hub
           uses: docker/login-action@v3
           with:
               username: ${{ vars.DOCKERHUB_USERNAME }}
               password: ${{ secrets.DOCKERHUB_TOKEN }}
               
                # Add support for more platforms with QEMU (optional)
                # https://github.com/docker/setup-qemu-action
        
       
        - name: Build image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        - name: docker test image
          run: |
           docker images
           docker run --name solar-system-app  -p  3000:3000 -d \
           -e MONGO_URI=${{vars.MONGO_CLUSTER_URL}}  -e  MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
           -e MONGO_PASSWORD=${{secrets.MONGO_PASSWORD}} \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
           sleep 30
           docker exec  solar-system-app env
           docker logs solar-system-app
           wget -q -O - http://127.0.0.1:3000 | grep live
        